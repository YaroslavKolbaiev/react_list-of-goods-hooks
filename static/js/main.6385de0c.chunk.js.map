{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","goodsClone","useState","isStarted","setStarted","isReversed","setReverse","sortType","setType","sort","good1","good2","localeCompare","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAAQ,CACZ,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IAAMC,EAAU,UAAOF,GACvB,EAAgCG,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAiBC,EAAjB,KAiBA,OAfAP,EAAWQ,MAAK,SAACC,EAAOC,GACtB,OAAQJ,GACN,IAAK,UACH,OAAOG,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMH,GAAYI,EAAMJ,GACjC,QACE,OAAO,MAITF,GACFJ,EAAWY,UAIX,qBAAKC,UAAU,MAAf,SACIX,EASA,qCACE,sBAAKW,UAAU,sBAAf,UACE,wBACEA,UAAU,cACVC,KAAK,SACLC,QAAS,WACPV,GAAW,GACXE,EAAQ,YALZ,iCAUA,wBACEM,UAAU,cACVC,KAAK,SACLC,QAAS,WACPV,GAAW,GACXE,EAAQ,WALZ,4BAUA,wBACEM,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAMV,GAAYD,IAH7B,qBAOA,wBACES,UAAU,cACVC,KAAK,SACLC,QAAS,WACPV,GAAW,GACXE,EAAQ,SALZ,sBAWF,oBAAIM,UAAU,kBAAd,SAEIb,EAAWgB,KAAI,SAAAC,GAAI,OACjB,oBACEJ,UAAU,YADZ,SAIGI,GAFIA,WArDf,wBACEJ,UAAU,cACVC,KAAK,SACLC,QAAS,kBAAMZ,GAAYD,IAH7B,sBCrCRgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.6385de0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const goodsClone = [...goods];\n  const [isStarted, setStarted] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setType] = useState('none');\n\n  goodsClone.sort((good1, good2) => {\n    switch (sortType) {\n      case 'alpabet':\n        return good1.localeCompare(good2);\n      case 'length':\n        return good1[sortType] - good2[sortType];\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goodsClone.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {!isStarted ? (\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => setStarted(!isStarted)}\n        >\n          Start\n        </button>\n      ) : (\n        <>\n          <div className=\"App__button-wrapper\">\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setReverse(false);\n                setType('alpabet');\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setReverse(false);\n                setType('length');\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => setReverse(!isReversed)}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={() => {\n                setReverse(false);\n                setType('none');\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          <ul className=\"App__goods-list\">\n            {\n              goodsClone.map(good => (\n                <li\n                  className=\"App__good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}